{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Desktop/market/frontend/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\nconst protectedRoutes = [\"/dashboard\"];\nconst publicRoutes = [\"/auth/login\", \"/auth/register\"];\n\nexport function middleware(req: NextRequest) {\n  const path = req.nextUrl.pathname;\n  const token = req.cookies.get(\"token\")?.value;\n\n  const isProtectedRoute = protectedRoutes.includes(path);\n  const isPublicRoute = publicRoutes.includes(path);\n\n  // if try a proctected route without token → redirect to login\n  if (isProtectedRoute && (!token || token.trim() === \"\")) {\n    return NextResponse.redirect(new URL(\"/auth/login\", req.url));\n  }\n\n  // if already have token and try to access to login or register → redirect to home\n  if (isPublicRoute && token) {\n    return NextResponse.redirect(new URL(\"/\", req.url));\n  }\n\n  return NextResponse.next();\n}\n\nexport const config = {\n  matcher: [\n    \"/((?!api|_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt).*)\",\n  ],\n};\n"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAEA,MAAM,kBAAkB;IAAC;CAAa;AACtC,MAAM,eAAe;IAAC;IAAe;CAAiB;AAE/C,SAAS,WAAW,GAAgB;IACzC,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ;IACjC,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU;IAExC,MAAM,mBAAmB,gBAAgB,QAAQ,CAAC;IAClD,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,8DAA8D;IAC9D,IAAI,oBAAoB,CAAC,CAAC,SAAS,MAAM,IAAI,OAAO,EAAE,GAAG;QACvD,OAAO,iOAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,IAAI,GAAG;IAC7D;IAEA,kFAAkF;IAClF,IAAI,iBAAiB,OAAO;QAC1B,OAAO,iOAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;IACnD;IAEA,OAAO,iOAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;KACD;AACH"}}]
}